echo ""
echo ""
echo "Please note: Not reloading the database"
echo ""
echo ""
exit 0






#!/bin/bash
#
#	Export the database to a local file.
#	This is VERY important, because the Docker container
#	will be destroyed as it is shut down.
#
TESTING_DIR=$(cd $(dirname $0); pwd)


# Check we have what we need
broken=N
[ "${DB_HOST}" == "" ] && echo "Error: Environment variable \$DB_HOST is not defined." && broken=Y
[ "${DB_PORT}" == "" ] && echo "Error: Environment variable \$DB_PORT is not defined." && broken=Y
if [ $broken == Y ] ; then
	echo ""
	echo "Please run this command in the appropriate target directory:"
	echo ""
	echo "    $ . SETENV"
	echo ""
	exit 1
fi

echo ''
echo '  DB_HOST='${DB_HOST}
echo '  DB_PORT='${DB_PORT}
echo '  DB_NAME='test1
echo ''

IMAGE=wnameless/mysql-phpmyadmin


# Drop the existing tables
dropfile=${TESTING_DIR}/testdata-drop-tables.sql
echo 'Dropping existing tables...'
echo ''
echo "  $ docker run -i --rm ${IMAGE} mysql -h${DB_HOST} -P${DB_PORT} -uroot test1 < ${dropfile}"
          docker run -i --rm ${IMAGE} mysql -h${DB_HOST} -P${DB_PORT} -uroot test1 < ${dropfile}
[ "$?" != "0" ] && exit 1
echo "  $ docker run -i --rm ${IMAGE} mysql -h${DB_HOST} -P${DB_PORT} -uroot test2 < ${dropfile}"
          docker run -i --rm ${IMAGE} mysql -h${DB_HOST} -P${DB_PORT} -uroot test2 < ${dropfile}
[ "$?" != "0" ] && exit 1
echo ''




# Load the database
dumpfile=${TESTING_DIR}/testdata-db1-mysql.sql
echo 'Loading data...'
echo ''
echo "  $ docker run -i --rm ${IMAGE} mysql -h${DB_HOST} -P${DB_PORT} -uroot test1 < ${dumpfile}"
          docker run -i --rm ${IMAGE} mysql -h${DB_HOST} -P${DB_PORT} -uroot test1 < ${dumpfile}
[ "$?" != "0" ] && exit 1
echo ''

# All okay
exit 0
